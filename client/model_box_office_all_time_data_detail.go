/*
IMDb-API

The IMDb-API Documentation. You need a <a href='/Identity/Account/Manage' target='_blank'><code>API Key</code></a> for testing APIs.<br/><a class='link' href='/API'>Back to API Tester</a>

API version: 1.8.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// BoxOfficeAllTimeDataDetail struct for BoxOfficeAllTimeDataDetail
type BoxOfficeAllTimeDataDetail struct {
	Id NullableString `json:"id,omitempty"`
	Rank NullableString `json:"rank,omitempty"`
	Title NullableString `json:"title,omitempty"`
	WorldwideLifetimeGross NullableString `json:"worldwideLifetimeGross,omitempty"`
	DomesticLifetimeGross NullableString `json:"domesticLifetimeGross,omitempty"`
	Domestic NullableString `json:"domestic,omitempty"`
	ForeignLifetimeGross NullableString `json:"foreignLifetimeGross,omitempty"`
	Foreign NullableString `json:"foreign,omitempty"`
	Year NullableString `json:"year,omitempty"`
}

// NewBoxOfficeAllTimeDataDetail instantiates a new BoxOfficeAllTimeDataDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBoxOfficeAllTimeDataDetail() *BoxOfficeAllTimeDataDetail {
	this := BoxOfficeAllTimeDataDetail{}
	return &this
}

// NewBoxOfficeAllTimeDataDetailWithDefaults instantiates a new BoxOfficeAllTimeDataDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBoxOfficeAllTimeDataDetailWithDefaults() *BoxOfficeAllTimeDataDetail {
	this := BoxOfficeAllTimeDataDetail{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BoxOfficeAllTimeDataDetail) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoxOfficeAllTimeDataDetail) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *BoxOfficeAllTimeDataDetail) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *BoxOfficeAllTimeDataDetail) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *BoxOfficeAllTimeDataDetail) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *BoxOfficeAllTimeDataDetail) UnsetId() {
	o.Id.Unset()
}

// GetRank returns the Rank field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BoxOfficeAllTimeDataDetail) GetRank() string {
	if o == nil || o.Rank.Get() == nil {
		var ret string
		return ret
	}
	return *o.Rank.Get()
}

// GetRankOk returns a tuple with the Rank field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoxOfficeAllTimeDataDetail) GetRankOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rank.Get(), o.Rank.IsSet()
}

// HasRank returns a boolean if a field has been set.
func (o *BoxOfficeAllTimeDataDetail) HasRank() bool {
	if o != nil && o.Rank.IsSet() {
		return true
	}

	return false
}

// SetRank gets a reference to the given NullableString and assigns it to the Rank field.
func (o *BoxOfficeAllTimeDataDetail) SetRank(v string) {
	o.Rank.Set(&v)
}
// SetRankNil sets the value for Rank to be an explicit nil
func (o *BoxOfficeAllTimeDataDetail) SetRankNil() {
	o.Rank.Set(nil)
}

// UnsetRank ensures that no value is present for Rank, not even an explicit nil
func (o *BoxOfficeAllTimeDataDetail) UnsetRank() {
	o.Rank.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BoxOfficeAllTimeDataDetail) GetTitle() string {
	if o == nil || o.Title.Get() == nil {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoxOfficeAllTimeDataDetail) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *BoxOfficeAllTimeDataDetail) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *BoxOfficeAllTimeDataDetail) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *BoxOfficeAllTimeDataDetail) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *BoxOfficeAllTimeDataDetail) UnsetTitle() {
	o.Title.Unset()
}

// GetWorldwideLifetimeGross returns the WorldwideLifetimeGross field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BoxOfficeAllTimeDataDetail) GetWorldwideLifetimeGross() string {
	if o == nil || o.WorldwideLifetimeGross.Get() == nil {
		var ret string
		return ret
	}
	return *o.WorldwideLifetimeGross.Get()
}

// GetWorldwideLifetimeGrossOk returns a tuple with the WorldwideLifetimeGross field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoxOfficeAllTimeDataDetail) GetWorldwideLifetimeGrossOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorldwideLifetimeGross.Get(), o.WorldwideLifetimeGross.IsSet()
}

// HasWorldwideLifetimeGross returns a boolean if a field has been set.
func (o *BoxOfficeAllTimeDataDetail) HasWorldwideLifetimeGross() bool {
	if o != nil && o.WorldwideLifetimeGross.IsSet() {
		return true
	}

	return false
}

// SetWorldwideLifetimeGross gets a reference to the given NullableString and assigns it to the WorldwideLifetimeGross field.
func (o *BoxOfficeAllTimeDataDetail) SetWorldwideLifetimeGross(v string) {
	o.WorldwideLifetimeGross.Set(&v)
}
// SetWorldwideLifetimeGrossNil sets the value for WorldwideLifetimeGross to be an explicit nil
func (o *BoxOfficeAllTimeDataDetail) SetWorldwideLifetimeGrossNil() {
	o.WorldwideLifetimeGross.Set(nil)
}

// UnsetWorldwideLifetimeGross ensures that no value is present for WorldwideLifetimeGross, not even an explicit nil
func (o *BoxOfficeAllTimeDataDetail) UnsetWorldwideLifetimeGross() {
	o.WorldwideLifetimeGross.Unset()
}

// GetDomesticLifetimeGross returns the DomesticLifetimeGross field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BoxOfficeAllTimeDataDetail) GetDomesticLifetimeGross() string {
	if o == nil || o.DomesticLifetimeGross.Get() == nil {
		var ret string
		return ret
	}
	return *o.DomesticLifetimeGross.Get()
}

// GetDomesticLifetimeGrossOk returns a tuple with the DomesticLifetimeGross field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoxOfficeAllTimeDataDetail) GetDomesticLifetimeGrossOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DomesticLifetimeGross.Get(), o.DomesticLifetimeGross.IsSet()
}

// HasDomesticLifetimeGross returns a boolean if a field has been set.
func (o *BoxOfficeAllTimeDataDetail) HasDomesticLifetimeGross() bool {
	if o != nil && o.DomesticLifetimeGross.IsSet() {
		return true
	}

	return false
}

// SetDomesticLifetimeGross gets a reference to the given NullableString and assigns it to the DomesticLifetimeGross field.
func (o *BoxOfficeAllTimeDataDetail) SetDomesticLifetimeGross(v string) {
	o.DomesticLifetimeGross.Set(&v)
}
// SetDomesticLifetimeGrossNil sets the value for DomesticLifetimeGross to be an explicit nil
func (o *BoxOfficeAllTimeDataDetail) SetDomesticLifetimeGrossNil() {
	o.DomesticLifetimeGross.Set(nil)
}

// UnsetDomesticLifetimeGross ensures that no value is present for DomesticLifetimeGross, not even an explicit nil
func (o *BoxOfficeAllTimeDataDetail) UnsetDomesticLifetimeGross() {
	o.DomesticLifetimeGross.Unset()
}

// GetDomestic returns the Domestic field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BoxOfficeAllTimeDataDetail) GetDomestic() string {
	if o == nil || o.Domestic.Get() == nil {
		var ret string
		return ret
	}
	return *o.Domestic.Get()
}

// GetDomesticOk returns a tuple with the Domestic field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoxOfficeAllTimeDataDetail) GetDomesticOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Domestic.Get(), o.Domestic.IsSet()
}

// HasDomestic returns a boolean if a field has been set.
func (o *BoxOfficeAllTimeDataDetail) HasDomestic() bool {
	if o != nil && o.Domestic.IsSet() {
		return true
	}

	return false
}

// SetDomestic gets a reference to the given NullableString and assigns it to the Domestic field.
func (o *BoxOfficeAllTimeDataDetail) SetDomestic(v string) {
	o.Domestic.Set(&v)
}
// SetDomesticNil sets the value for Domestic to be an explicit nil
func (o *BoxOfficeAllTimeDataDetail) SetDomesticNil() {
	o.Domestic.Set(nil)
}

// UnsetDomestic ensures that no value is present for Domestic, not even an explicit nil
func (o *BoxOfficeAllTimeDataDetail) UnsetDomestic() {
	o.Domestic.Unset()
}

// GetForeignLifetimeGross returns the ForeignLifetimeGross field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BoxOfficeAllTimeDataDetail) GetForeignLifetimeGross() string {
	if o == nil || o.ForeignLifetimeGross.Get() == nil {
		var ret string
		return ret
	}
	return *o.ForeignLifetimeGross.Get()
}

// GetForeignLifetimeGrossOk returns a tuple with the ForeignLifetimeGross field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoxOfficeAllTimeDataDetail) GetForeignLifetimeGrossOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ForeignLifetimeGross.Get(), o.ForeignLifetimeGross.IsSet()
}

// HasForeignLifetimeGross returns a boolean if a field has been set.
func (o *BoxOfficeAllTimeDataDetail) HasForeignLifetimeGross() bool {
	if o != nil && o.ForeignLifetimeGross.IsSet() {
		return true
	}

	return false
}

// SetForeignLifetimeGross gets a reference to the given NullableString and assigns it to the ForeignLifetimeGross field.
func (o *BoxOfficeAllTimeDataDetail) SetForeignLifetimeGross(v string) {
	o.ForeignLifetimeGross.Set(&v)
}
// SetForeignLifetimeGrossNil sets the value for ForeignLifetimeGross to be an explicit nil
func (o *BoxOfficeAllTimeDataDetail) SetForeignLifetimeGrossNil() {
	o.ForeignLifetimeGross.Set(nil)
}

// UnsetForeignLifetimeGross ensures that no value is present for ForeignLifetimeGross, not even an explicit nil
func (o *BoxOfficeAllTimeDataDetail) UnsetForeignLifetimeGross() {
	o.ForeignLifetimeGross.Unset()
}

// GetForeign returns the Foreign field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BoxOfficeAllTimeDataDetail) GetForeign() string {
	if o == nil || o.Foreign.Get() == nil {
		var ret string
		return ret
	}
	return *o.Foreign.Get()
}

// GetForeignOk returns a tuple with the Foreign field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoxOfficeAllTimeDataDetail) GetForeignOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Foreign.Get(), o.Foreign.IsSet()
}

// HasForeign returns a boolean if a field has been set.
func (o *BoxOfficeAllTimeDataDetail) HasForeign() bool {
	if o != nil && o.Foreign.IsSet() {
		return true
	}

	return false
}

// SetForeign gets a reference to the given NullableString and assigns it to the Foreign field.
func (o *BoxOfficeAllTimeDataDetail) SetForeign(v string) {
	o.Foreign.Set(&v)
}
// SetForeignNil sets the value for Foreign to be an explicit nil
func (o *BoxOfficeAllTimeDataDetail) SetForeignNil() {
	o.Foreign.Set(nil)
}

// UnsetForeign ensures that no value is present for Foreign, not even an explicit nil
func (o *BoxOfficeAllTimeDataDetail) UnsetForeign() {
	o.Foreign.Unset()
}

// GetYear returns the Year field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BoxOfficeAllTimeDataDetail) GetYear() string {
	if o == nil || o.Year.Get() == nil {
		var ret string
		return ret
	}
	return *o.Year.Get()
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoxOfficeAllTimeDataDetail) GetYearOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Year.Get(), o.Year.IsSet()
}

// HasYear returns a boolean if a field has been set.
func (o *BoxOfficeAllTimeDataDetail) HasYear() bool {
	if o != nil && o.Year.IsSet() {
		return true
	}

	return false
}

// SetYear gets a reference to the given NullableString and assigns it to the Year field.
func (o *BoxOfficeAllTimeDataDetail) SetYear(v string) {
	o.Year.Set(&v)
}
// SetYearNil sets the value for Year to be an explicit nil
func (o *BoxOfficeAllTimeDataDetail) SetYearNil() {
	o.Year.Set(nil)
}

// UnsetYear ensures that no value is present for Year, not even an explicit nil
func (o *BoxOfficeAllTimeDataDetail) UnsetYear() {
	o.Year.Unset()
}

func (o BoxOfficeAllTimeDataDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Rank.IsSet() {
		toSerialize["rank"] = o.Rank.Get()
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.WorldwideLifetimeGross.IsSet() {
		toSerialize["worldwideLifetimeGross"] = o.WorldwideLifetimeGross.Get()
	}
	if o.DomesticLifetimeGross.IsSet() {
		toSerialize["domesticLifetimeGross"] = o.DomesticLifetimeGross.Get()
	}
	if o.Domestic.IsSet() {
		toSerialize["domestic"] = o.Domestic.Get()
	}
	if o.ForeignLifetimeGross.IsSet() {
		toSerialize["foreignLifetimeGross"] = o.ForeignLifetimeGross.Get()
	}
	if o.Foreign.IsSet() {
		toSerialize["foreign"] = o.Foreign.Get()
	}
	if o.Year.IsSet() {
		toSerialize["year"] = o.Year.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableBoxOfficeAllTimeDataDetail struct {
	value *BoxOfficeAllTimeDataDetail
	isSet bool
}

func (v NullableBoxOfficeAllTimeDataDetail) Get() *BoxOfficeAllTimeDataDetail {
	return v.value
}

func (v *NullableBoxOfficeAllTimeDataDetail) Set(val *BoxOfficeAllTimeDataDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableBoxOfficeAllTimeDataDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableBoxOfficeAllTimeDataDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBoxOfficeAllTimeDataDetail(val *BoxOfficeAllTimeDataDetail) *NullableBoxOfficeAllTimeDataDetail {
	return &NullableBoxOfficeAllTimeDataDetail{value: val, isSet: true}
}

func (v NullableBoxOfficeAllTimeDataDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBoxOfficeAllTimeDataDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


