/*
IMDb-API

The IMDb-API Documentation. You need a <a href='/Identity/Account/Manage' target='_blank'><code>API Key</code></a> for testing APIs.<br/><a class='link' href='/API'>Back to API Tester</a>

API version: 1.8.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// BoxOfficeShort struct for BoxOfficeShort
type BoxOfficeShort struct {
	Budget NullableString `json:"budget,omitempty"`
	OpeningWeekendUSA NullableString `json:"openingWeekendUSA,omitempty"`
	GrossUSA NullableString `json:"grossUSA,omitempty"`
	CumulativeWorldwideGross NullableString `json:"cumulativeWorldwideGross,omitempty"`
}

// NewBoxOfficeShort instantiates a new BoxOfficeShort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBoxOfficeShort() *BoxOfficeShort {
	this := BoxOfficeShort{}
	return &this
}

// NewBoxOfficeShortWithDefaults instantiates a new BoxOfficeShort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBoxOfficeShortWithDefaults() *BoxOfficeShort {
	this := BoxOfficeShort{}
	return &this
}

// GetBudget returns the Budget field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BoxOfficeShort) GetBudget() string {
	if o == nil || o.Budget.Get() == nil {
		var ret string
		return ret
	}
	return *o.Budget.Get()
}

// GetBudgetOk returns a tuple with the Budget field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoxOfficeShort) GetBudgetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Budget.Get(), o.Budget.IsSet()
}

// HasBudget returns a boolean if a field has been set.
func (o *BoxOfficeShort) HasBudget() bool {
	if o != nil && o.Budget.IsSet() {
		return true
	}

	return false
}

// SetBudget gets a reference to the given NullableString and assigns it to the Budget field.
func (o *BoxOfficeShort) SetBudget(v string) {
	o.Budget.Set(&v)
}
// SetBudgetNil sets the value for Budget to be an explicit nil
func (o *BoxOfficeShort) SetBudgetNil() {
	o.Budget.Set(nil)
}

// UnsetBudget ensures that no value is present for Budget, not even an explicit nil
func (o *BoxOfficeShort) UnsetBudget() {
	o.Budget.Unset()
}

// GetOpeningWeekendUSA returns the OpeningWeekendUSA field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BoxOfficeShort) GetOpeningWeekendUSA() string {
	if o == nil || o.OpeningWeekendUSA.Get() == nil {
		var ret string
		return ret
	}
	return *o.OpeningWeekendUSA.Get()
}

// GetOpeningWeekendUSAOk returns a tuple with the OpeningWeekendUSA field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoxOfficeShort) GetOpeningWeekendUSAOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OpeningWeekendUSA.Get(), o.OpeningWeekendUSA.IsSet()
}

// HasOpeningWeekendUSA returns a boolean if a field has been set.
func (o *BoxOfficeShort) HasOpeningWeekendUSA() bool {
	if o != nil && o.OpeningWeekendUSA.IsSet() {
		return true
	}

	return false
}

// SetOpeningWeekendUSA gets a reference to the given NullableString and assigns it to the OpeningWeekendUSA field.
func (o *BoxOfficeShort) SetOpeningWeekendUSA(v string) {
	o.OpeningWeekendUSA.Set(&v)
}
// SetOpeningWeekendUSANil sets the value for OpeningWeekendUSA to be an explicit nil
func (o *BoxOfficeShort) SetOpeningWeekendUSANil() {
	o.OpeningWeekendUSA.Set(nil)
}

// UnsetOpeningWeekendUSA ensures that no value is present for OpeningWeekendUSA, not even an explicit nil
func (o *BoxOfficeShort) UnsetOpeningWeekendUSA() {
	o.OpeningWeekendUSA.Unset()
}

// GetGrossUSA returns the GrossUSA field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BoxOfficeShort) GetGrossUSA() string {
	if o == nil || o.GrossUSA.Get() == nil {
		var ret string
		return ret
	}
	return *o.GrossUSA.Get()
}

// GetGrossUSAOk returns a tuple with the GrossUSA field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoxOfficeShort) GetGrossUSAOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GrossUSA.Get(), o.GrossUSA.IsSet()
}

// HasGrossUSA returns a boolean if a field has been set.
func (o *BoxOfficeShort) HasGrossUSA() bool {
	if o != nil && o.GrossUSA.IsSet() {
		return true
	}

	return false
}

// SetGrossUSA gets a reference to the given NullableString and assigns it to the GrossUSA field.
func (o *BoxOfficeShort) SetGrossUSA(v string) {
	o.GrossUSA.Set(&v)
}
// SetGrossUSANil sets the value for GrossUSA to be an explicit nil
func (o *BoxOfficeShort) SetGrossUSANil() {
	o.GrossUSA.Set(nil)
}

// UnsetGrossUSA ensures that no value is present for GrossUSA, not even an explicit nil
func (o *BoxOfficeShort) UnsetGrossUSA() {
	o.GrossUSA.Unset()
}

// GetCumulativeWorldwideGross returns the CumulativeWorldwideGross field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BoxOfficeShort) GetCumulativeWorldwideGross() string {
	if o == nil || o.CumulativeWorldwideGross.Get() == nil {
		var ret string
		return ret
	}
	return *o.CumulativeWorldwideGross.Get()
}

// GetCumulativeWorldwideGrossOk returns a tuple with the CumulativeWorldwideGross field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BoxOfficeShort) GetCumulativeWorldwideGrossOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CumulativeWorldwideGross.Get(), o.CumulativeWorldwideGross.IsSet()
}

// HasCumulativeWorldwideGross returns a boolean if a field has been set.
func (o *BoxOfficeShort) HasCumulativeWorldwideGross() bool {
	if o != nil && o.CumulativeWorldwideGross.IsSet() {
		return true
	}

	return false
}

// SetCumulativeWorldwideGross gets a reference to the given NullableString and assigns it to the CumulativeWorldwideGross field.
func (o *BoxOfficeShort) SetCumulativeWorldwideGross(v string) {
	o.CumulativeWorldwideGross.Set(&v)
}
// SetCumulativeWorldwideGrossNil sets the value for CumulativeWorldwideGross to be an explicit nil
func (o *BoxOfficeShort) SetCumulativeWorldwideGrossNil() {
	o.CumulativeWorldwideGross.Set(nil)
}

// UnsetCumulativeWorldwideGross ensures that no value is present for CumulativeWorldwideGross, not even an explicit nil
func (o *BoxOfficeShort) UnsetCumulativeWorldwideGross() {
	o.CumulativeWorldwideGross.Unset()
}

func (o BoxOfficeShort) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Budget.IsSet() {
		toSerialize["budget"] = o.Budget.Get()
	}
	if o.OpeningWeekendUSA.IsSet() {
		toSerialize["openingWeekendUSA"] = o.OpeningWeekendUSA.Get()
	}
	if o.GrossUSA.IsSet() {
		toSerialize["grossUSA"] = o.GrossUSA.Get()
	}
	if o.CumulativeWorldwideGross.IsSet() {
		toSerialize["cumulativeWorldwideGross"] = o.CumulativeWorldwideGross.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableBoxOfficeShort struct {
	value *BoxOfficeShort
	isSet bool
}

func (v NullableBoxOfficeShort) Get() *BoxOfficeShort {
	return v.value
}

func (v *NullableBoxOfficeShort) Set(val *BoxOfficeShort) {
	v.value = val
	v.isSet = true
}

func (v NullableBoxOfficeShort) IsSet() bool {
	return v.isSet
}

func (v *NullableBoxOfficeShort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBoxOfficeShort(val *BoxOfficeShort) *NullableBoxOfficeShort {
	return &NullableBoxOfficeShort{value: val, isSet: true}
}

func (v NullableBoxOfficeShort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBoxOfficeShort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


