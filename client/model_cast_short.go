/*
IMDb-API

The IMDb-API Documentation. You need a <a href='/Identity/Account/Manage' target='_blank'><code>API Key</code></a> for testing APIs.<br/><a class='link' href='/API'>Back to API Tester</a>

API version: 1.8.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// CastShort struct for CastShort
type CastShort struct {
	Job NullableString `json:"job,omitempty"`
	Items []CastShortItem `json:"items,omitempty"`
}

// NewCastShort instantiates a new CastShort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCastShort() *CastShort {
	this := CastShort{}
	return &this
}

// NewCastShortWithDefaults instantiates a new CastShort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCastShortWithDefaults() *CastShort {
	this := CastShort{}
	return &this
}

// GetJob returns the Job field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CastShort) GetJob() string {
	if o == nil || o.Job.Get() == nil {
		var ret string
		return ret
	}
	return *o.Job.Get()
}

// GetJobOk returns a tuple with the Job field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CastShort) GetJobOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Job.Get(), o.Job.IsSet()
}

// HasJob returns a boolean if a field has been set.
func (o *CastShort) HasJob() bool {
	if o != nil && o.Job.IsSet() {
		return true
	}

	return false
}

// SetJob gets a reference to the given NullableString and assigns it to the Job field.
func (o *CastShort) SetJob(v string) {
	o.Job.Set(&v)
}
// SetJobNil sets the value for Job to be an explicit nil
func (o *CastShort) SetJobNil() {
	o.Job.Set(nil)
}

// UnsetJob ensures that no value is present for Job, not even an explicit nil
func (o *CastShort) UnsetJob() {
	o.Job.Unset()
}

// GetItems returns the Items field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CastShort) GetItems() []CastShortItem {
	if o == nil {
		var ret []CastShortItem
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CastShort) GetItemsOk() ([]CastShortItem, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *CastShort) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []CastShortItem and assigns it to the Items field.
func (o *CastShort) SetItems(v []CastShortItem) {
	o.Items = v
}

func (o CastShort) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Job.IsSet() {
		toSerialize["job"] = o.Job.Get()
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	return json.Marshal(toSerialize)
}

type NullableCastShort struct {
	value *CastShort
	isSet bool
}

func (v NullableCastShort) Get() *CastShort {
	return v.value
}

func (v *NullableCastShort) Set(val *CastShort) {
	v.value = val
	v.isSet = true
}

func (v NullableCastShort) IsSet() bool {
	return v.isSet
}

func (v *NullableCastShort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCastShort(val *CastShort) *NullableCastShort {
	return &NullableCastShort{value: val, isSet: true}
}

func (v NullableCastShort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCastShort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


