/*
IMDb-API

The IMDb-API Documentation. You need a <a href='/Identity/Account/Manage' target='_blank'><code>API Key</code></a> for testing APIs.<br/><a class='link' href='/API'>Back to API Tester</a>

API version: 1.8.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// EpisodeShortDetail struct for EpisodeShortDetail
type EpisodeShortDetail struct {
	Id NullableString `json:"id,omitempty"`
	SeasonNumber NullableString `json:"seasonNumber,omitempty"`
	EpisodeNumber NullableString `json:"episodeNumber,omitempty"`
	Title NullableString `json:"title,omitempty"`
	Image NullableString `json:"image,omitempty"`
	Year NullableString `json:"year,omitempty"`
	Released NullableString `json:"released,omitempty"`
	Plot NullableString `json:"plot,omitempty"`
	ImDbRating NullableString `json:"imDbRating,omitempty"`
	ImDbRatingCount NullableString `json:"imDbRatingCount,omitempty"`
}

// NewEpisodeShortDetail instantiates a new EpisodeShortDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEpisodeShortDetail() *EpisodeShortDetail {
	this := EpisodeShortDetail{}
	return &this
}

// NewEpisodeShortDetailWithDefaults instantiates a new EpisodeShortDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEpisodeShortDetailWithDefaults() *EpisodeShortDetail {
	this := EpisodeShortDetail{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeShortDetail) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeShortDetail) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *EpisodeShortDetail) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *EpisodeShortDetail) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *EpisodeShortDetail) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *EpisodeShortDetail) UnsetId() {
	o.Id.Unset()
}

// GetSeasonNumber returns the SeasonNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeShortDetail) GetSeasonNumber() string {
	if o == nil || o.SeasonNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.SeasonNumber.Get()
}

// GetSeasonNumberOk returns a tuple with the SeasonNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeShortDetail) GetSeasonNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeasonNumber.Get(), o.SeasonNumber.IsSet()
}

// HasSeasonNumber returns a boolean if a field has been set.
func (o *EpisodeShortDetail) HasSeasonNumber() bool {
	if o != nil && o.SeasonNumber.IsSet() {
		return true
	}

	return false
}

// SetSeasonNumber gets a reference to the given NullableString and assigns it to the SeasonNumber field.
func (o *EpisodeShortDetail) SetSeasonNumber(v string) {
	o.SeasonNumber.Set(&v)
}
// SetSeasonNumberNil sets the value for SeasonNumber to be an explicit nil
func (o *EpisodeShortDetail) SetSeasonNumberNil() {
	o.SeasonNumber.Set(nil)
}

// UnsetSeasonNumber ensures that no value is present for SeasonNumber, not even an explicit nil
func (o *EpisodeShortDetail) UnsetSeasonNumber() {
	o.SeasonNumber.Unset()
}

// GetEpisodeNumber returns the EpisodeNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeShortDetail) GetEpisodeNumber() string {
	if o == nil || o.EpisodeNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.EpisodeNumber.Get()
}

// GetEpisodeNumberOk returns a tuple with the EpisodeNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeShortDetail) GetEpisodeNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EpisodeNumber.Get(), o.EpisodeNumber.IsSet()
}

// HasEpisodeNumber returns a boolean if a field has been set.
func (o *EpisodeShortDetail) HasEpisodeNumber() bool {
	if o != nil && o.EpisodeNumber.IsSet() {
		return true
	}

	return false
}

// SetEpisodeNumber gets a reference to the given NullableString and assigns it to the EpisodeNumber field.
func (o *EpisodeShortDetail) SetEpisodeNumber(v string) {
	o.EpisodeNumber.Set(&v)
}
// SetEpisodeNumberNil sets the value for EpisodeNumber to be an explicit nil
func (o *EpisodeShortDetail) SetEpisodeNumberNil() {
	o.EpisodeNumber.Set(nil)
}

// UnsetEpisodeNumber ensures that no value is present for EpisodeNumber, not even an explicit nil
func (o *EpisodeShortDetail) UnsetEpisodeNumber() {
	o.EpisodeNumber.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeShortDetail) GetTitle() string {
	if o == nil || o.Title.Get() == nil {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeShortDetail) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *EpisodeShortDetail) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *EpisodeShortDetail) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *EpisodeShortDetail) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *EpisodeShortDetail) UnsetTitle() {
	o.Title.Unset()
}

// GetImage returns the Image field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeShortDetail) GetImage() string {
	if o == nil || o.Image.Get() == nil {
		var ret string
		return ret
	}
	return *o.Image.Get()
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeShortDetail) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Image.Get(), o.Image.IsSet()
}

// HasImage returns a boolean if a field has been set.
func (o *EpisodeShortDetail) HasImage() bool {
	if o != nil && o.Image.IsSet() {
		return true
	}

	return false
}

// SetImage gets a reference to the given NullableString and assigns it to the Image field.
func (o *EpisodeShortDetail) SetImage(v string) {
	o.Image.Set(&v)
}
// SetImageNil sets the value for Image to be an explicit nil
func (o *EpisodeShortDetail) SetImageNil() {
	o.Image.Set(nil)
}

// UnsetImage ensures that no value is present for Image, not even an explicit nil
func (o *EpisodeShortDetail) UnsetImage() {
	o.Image.Unset()
}

// GetYear returns the Year field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeShortDetail) GetYear() string {
	if o == nil || o.Year.Get() == nil {
		var ret string
		return ret
	}
	return *o.Year.Get()
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeShortDetail) GetYearOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Year.Get(), o.Year.IsSet()
}

// HasYear returns a boolean if a field has been set.
func (o *EpisodeShortDetail) HasYear() bool {
	if o != nil && o.Year.IsSet() {
		return true
	}

	return false
}

// SetYear gets a reference to the given NullableString and assigns it to the Year field.
func (o *EpisodeShortDetail) SetYear(v string) {
	o.Year.Set(&v)
}
// SetYearNil sets the value for Year to be an explicit nil
func (o *EpisodeShortDetail) SetYearNil() {
	o.Year.Set(nil)
}

// UnsetYear ensures that no value is present for Year, not even an explicit nil
func (o *EpisodeShortDetail) UnsetYear() {
	o.Year.Unset()
}

// GetReleased returns the Released field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeShortDetail) GetReleased() string {
	if o == nil || o.Released.Get() == nil {
		var ret string
		return ret
	}
	return *o.Released.Get()
}

// GetReleasedOk returns a tuple with the Released field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeShortDetail) GetReleasedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Released.Get(), o.Released.IsSet()
}

// HasReleased returns a boolean if a field has been set.
func (o *EpisodeShortDetail) HasReleased() bool {
	if o != nil && o.Released.IsSet() {
		return true
	}

	return false
}

// SetReleased gets a reference to the given NullableString and assigns it to the Released field.
func (o *EpisodeShortDetail) SetReleased(v string) {
	o.Released.Set(&v)
}
// SetReleasedNil sets the value for Released to be an explicit nil
func (o *EpisodeShortDetail) SetReleasedNil() {
	o.Released.Set(nil)
}

// UnsetReleased ensures that no value is present for Released, not even an explicit nil
func (o *EpisodeShortDetail) UnsetReleased() {
	o.Released.Unset()
}

// GetPlot returns the Plot field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeShortDetail) GetPlot() string {
	if o == nil || o.Plot.Get() == nil {
		var ret string
		return ret
	}
	return *o.Plot.Get()
}

// GetPlotOk returns a tuple with the Plot field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeShortDetail) GetPlotOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Plot.Get(), o.Plot.IsSet()
}

// HasPlot returns a boolean if a field has been set.
func (o *EpisodeShortDetail) HasPlot() bool {
	if o != nil && o.Plot.IsSet() {
		return true
	}

	return false
}

// SetPlot gets a reference to the given NullableString and assigns it to the Plot field.
func (o *EpisodeShortDetail) SetPlot(v string) {
	o.Plot.Set(&v)
}
// SetPlotNil sets the value for Plot to be an explicit nil
func (o *EpisodeShortDetail) SetPlotNil() {
	o.Plot.Set(nil)
}

// UnsetPlot ensures that no value is present for Plot, not even an explicit nil
func (o *EpisodeShortDetail) UnsetPlot() {
	o.Plot.Unset()
}

// GetImDbRating returns the ImDbRating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeShortDetail) GetImDbRating() string {
	if o == nil || o.ImDbRating.Get() == nil {
		var ret string
		return ret
	}
	return *o.ImDbRating.Get()
}

// GetImDbRatingOk returns a tuple with the ImDbRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeShortDetail) GetImDbRatingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImDbRating.Get(), o.ImDbRating.IsSet()
}

// HasImDbRating returns a boolean if a field has been set.
func (o *EpisodeShortDetail) HasImDbRating() bool {
	if o != nil && o.ImDbRating.IsSet() {
		return true
	}

	return false
}

// SetImDbRating gets a reference to the given NullableString and assigns it to the ImDbRating field.
func (o *EpisodeShortDetail) SetImDbRating(v string) {
	o.ImDbRating.Set(&v)
}
// SetImDbRatingNil sets the value for ImDbRating to be an explicit nil
func (o *EpisodeShortDetail) SetImDbRatingNil() {
	o.ImDbRating.Set(nil)
}

// UnsetImDbRating ensures that no value is present for ImDbRating, not even an explicit nil
func (o *EpisodeShortDetail) UnsetImDbRating() {
	o.ImDbRating.Unset()
}

// GetImDbRatingCount returns the ImDbRatingCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EpisodeShortDetail) GetImDbRatingCount() string {
	if o == nil || o.ImDbRatingCount.Get() == nil {
		var ret string
		return ret
	}
	return *o.ImDbRatingCount.Get()
}

// GetImDbRatingCountOk returns a tuple with the ImDbRatingCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EpisodeShortDetail) GetImDbRatingCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImDbRatingCount.Get(), o.ImDbRatingCount.IsSet()
}

// HasImDbRatingCount returns a boolean if a field has been set.
func (o *EpisodeShortDetail) HasImDbRatingCount() bool {
	if o != nil && o.ImDbRatingCount.IsSet() {
		return true
	}

	return false
}

// SetImDbRatingCount gets a reference to the given NullableString and assigns it to the ImDbRatingCount field.
func (o *EpisodeShortDetail) SetImDbRatingCount(v string) {
	o.ImDbRatingCount.Set(&v)
}
// SetImDbRatingCountNil sets the value for ImDbRatingCount to be an explicit nil
func (o *EpisodeShortDetail) SetImDbRatingCountNil() {
	o.ImDbRatingCount.Set(nil)
}

// UnsetImDbRatingCount ensures that no value is present for ImDbRatingCount, not even an explicit nil
func (o *EpisodeShortDetail) UnsetImDbRatingCount() {
	o.ImDbRatingCount.Unset()
}

func (o EpisodeShortDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.SeasonNumber.IsSet() {
		toSerialize["seasonNumber"] = o.SeasonNumber.Get()
	}
	if o.EpisodeNumber.IsSet() {
		toSerialize["episodeNumber"] = o.EpisodeNumber.Get()
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.Image.IsSet() {
		toSerialize["image"] = o.Image.Get()
	}
	if o.Year.IsSet() {
		toSerialize["year"] = o.Year.Get()
	}
	if o.Released.IsSet() {
		toSerialize["released"] = o.Released.Get()
	}
	if o.Plot.IsSet() {
		toSerialize["plot"] = o.Plot.Get()
	}
	if o.ImDbRating.IsSet() {
		toSerialize["imDbRating"] = o.ImDbRating.Get()
	}
	if o.ImDbRatingCount.IsSet() {
		toSerialize["imDbRatingCount"] = o.ImDbRatingCount.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableEpisodeShortDetail struct {
	value *EpisodeShortDetail
	isSet bool
}

func (v NullableEpisodeShortDetail) Get() *EpisodeShortDetail {
	return v.value
}

func (v *NullableEpisodeShortDetail) Set(val *EpisodeShortDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableEpisodeShortDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableEpisodeShortDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEpisodeShortDetail(val *EpisodeShortDetail) *NullableEpisodeShortDetail {
	return &NullableEpisodeShortDetail{value: val, isSet: true}
}

func (v NullableEpisodeShortDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEpisodeShortDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


