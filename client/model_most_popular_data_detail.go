/*
IMDb-API

The IMDb-API Documentation. You need a <a href='/Identity/Account/Manage' target='_blank'><code>API Key</code></a> for testing APIs.<br/><a class='link' href='/API'>Back to API Tester</a>

API version: 1.8.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// MostPopularDataDetail struct for MostPopularDataDetail
type MostPopularDataDetail struct {
	Id NullableString `json:"id,omitempty"`
	Rank NullableString `json:"rank,omitempty"`
	RankUpDown NullableString `json:"rankUpDown,omitempty"`
	Title NullableString `json:"title,omitempty"`
	FullTitle NullableString `json:"fullTitle,omitempty"`
	Year NullableString `json:"year,omitempty"`
	Image NullableString `json:"image,omitempty"`
	Crew NullableString `json:"crew,omitempty"`
	ImDbRating NullableString `json:"imDbRating,omitempty"`
	ImDbRatingCount NullableString `json:"imDbRatingCount,omitempty"`
}

// NewMostPopularDataDetail instantiates a new MostPopularDataDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMostPopularDataDetail() *MostPopularDataDetail {
	this := MostPopularDataDetail{}
	return &this
}

// NewMostPopularDataDetailWithDefaults instantiates a new MostPopularDataDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMostPopularDataDetailWithDefaults() *MostPopularDataDetail {
	this := MostPopularDataDetail{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MostPopularDataDetail) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MostPopularDataDetail) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *MostPopularDataDetail) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *MostPopularDataDetail) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *MostPopularDataDetail) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *MostPopularDataDetail) UnsetId() {
	o.Id.Unset()
}

// GetRank returns the Rank field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MostPopularDataDetail) GetRank() string {
	if o == nil || o.Rank.Get() == nil {
		var ret string
		return ret
	}
	return *o.Rank.Get()
}

// GetRankOk returns a tuple with the Rank field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MostPopularDataDetail) GetRankOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rank.Get(), o.Rank.IsSet()
}

// HasRank returns a boolean if a field has been set.
func (o *MostPopularDataDetail) HasRank() bool {
	if o != nil && o.Rank.IsSet() {
		return true
	}

	return false
}

// SetRank gets a reference to the given NullableString and assigns it to the Rank field.
func (o *MostPopularDataDetail) SetRank(v string) {
	o.Rank.Set(&v)
}
// SetRankNil sets the value for Rank to be an explicit nil
func (o *MostPopularDataDetail) SetRankNil() {
	o.Rank.Set(nil)
}

// UnsetRank ensures that no value is present for Rank, not even an explicit nil
func (o *MostPopularDataDetail) UnsetRank() {
	o.Rank.Unset()
}

// GetRankUpDown returns the RankUpDown field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MostPopularDataDetail) GetRankUpDown() string {
	if o == nil || o.RankUpDown.Get() == nil {
		var ret string
		return ret
	}
	return *o.RankUpDown.Get()
}

// GetRankUpDownOk returns a tuple with the RankUpDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MostPopularDataDetail) GetRankUpDownOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RankUpDown.Get(), o.RankUpDown.IsSet()
}

// HasRankUpDown returns a boolean if a field has been set.
func (o *MostPopularDataDetail) HasRankUpDown() bool {
	if o != nil && o.RankUpDown.IsSet() {
		return true
	}

	return false
}

// SetRankUpDown gets a reference to the given NullableString and assigns it to the RankUpDown field.
func (o *MostPopularDataDetail) SetRankUpDown(v string) {
	o.RankUpDown.Set(&v)
}
// SetRankUpDownNil sets the value for RankUpDown to be an explicit nil
func (o *MostPopularDataDetail) SetRankUpDownNil() {
	o.RankUpDown.Set(nil)
}

// UnsetRankUpDown ensures that no value is present for RankUpDown, not even an explicit nil
func (o *MostPopularDataDetail) UnsetRankUpDown() {
	o.RankUpDown.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MostPopularDataDetail) GetTitle() string {
	if o == nil || o.Title.Get() == nil {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MostPopularDataDetail) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *MostPopularDataDetail) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *MostPopularDataDetail) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *MostPopularDataDetail) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *MostPopularDataDetail) UnsetTitle() {
	o.Title.Unset()
}

// GetFullTitle returns the FullTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MostPopularDataDetail) GetFullTitle() string {
	if o == nil || o.FullTitle.Get() == nil {
		var ret string
		return ret
	}
	return *o.FullTitle.Get()
}

// GetFullTitleOk returns a tuple with the FullTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MostPopularDataDetail) GetFullTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FullTitle.Get(), o.FullTitle.IsSet()
}

// HasFullTitle returns a boolean if a field has been set.
func (o *MostPopularDataDetail) HasFullTitle() bool {
	if o != nil && o.FullTitle.IsSet() {
		return true
	}

	return false
}

// SetFullTitle gets a reference to the given NullableString and assigns it to the FullTitle field.
func (o *MostPopularDataDetail) SetFullTitle(v string) {
	o.FullTitle.Set(&v)
}
// SetFullTitleNil sets the value for FullTitle to be an explicit nil
func (o *MostPopularDataDetail) SetFullTitleNil() {
	o.FullTitle.Set(nil)
}

// UnsetFullTitle ensures that no value is present for FullTitle, not even an explicit nil
func (o *MostPopularDataDetail) UnsetFullTitle() {
	o.FullTitle.Unset()
}

// GetYear returns the Year field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MostPopularDataDetail) GetYear() string {
	if o == nil || o.Year.Get() == nil {
		var ret string
		return ret
	}
	return *o.Year.Get()
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MostPopularDataDetail) GetYearOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Year.Get(), o.Year.IsSet()
}

// HasYear returns a boolean if a field has been set.
func (o *MostPopularDataDetail) HasYear() bool {
	if o != nil && o.Year.IsSet() {
		return true
	}

	return false
}

// SetYear gets a reference to the given NullableString and assigns it to the Year field.
func (o *MostPopularDataDetail) SetYear(v string) {
	o.Year.Set(&v)
}
// SetYearNil sets the value for Year to be an explicit nil
func (o *MostPopularDataDetail) SetYearNil() {
	o.Year.Set(nil)
}

// UnsetYear ensures that no value is present for Year, not even an explicit nil
func (o *MostPopularDataDetail) UnsetYear() {
	o.Year.Unset()
}

// GetImage returns the Image field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MostPopularDataDetail) GetImage() string {
	if o == nil || o.Image.Get() == nil {
		var ret string
		return ret
	}
	return *o.Image.Get()
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MostPopularDataDetail) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Image.Get(), o.Image.IsSet()
}

// HasImage returns a boolean if a field has been set.
func (o *MostPopularDataDetail) HasImage() bool {
	if o != nil && o.Image.IsSet() {
		return true
	}

	return false
}

// SetImage gets a reference to the given NullableString and assigns it to the Image field.
func (o *MostPopularDataDetail) SetImage(v string) {
	o.Image.Set(&v)
}
// SetImageNil sets the value for Image to be an explicit nil
func (o *MostPopularDataDetail) SetImageNil() {
	o.Image.Set(nil)
}

// UnsetImage ensures that no value is present for Image, not even an explicit nil
func (o *MostPopularDataDetail) UnsetImage() {
	o.Image.Unset()
}

// GetCrew returns the Crew field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MostPopularDataDetail) GetCrew() string {
	if o == nil || o.Crew.Get() == nil {
		var ret string
		return ret
	}
	return *o.Crew.Get()
}

// GetCrewOk returns a tuple with the Crew field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MostPopularDataDetail) GetCrewOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Crew.Get(), o.Crew.IsSet()
}

// HasCrew returns a boolean if a field has been set.
func (o *MostPopularDataDetail) HasCrew() bool {
	if o != nil && o.Crew.IsSet() {
		return true
	}

	return false
}

// SetCrew gets a reference to the given NullableString and assigns it to the Crew field.
func (o *MostPopularDataDetail) SetCrew(v string) {
	o.Crew.Set(&v)
}
// SetCrewNil sets the value for Crew to be an explicit nil
func (o *MostPopularDataDetail) SetCrewNil() {
	o.Crew.Set(nil)
}

// UnsetCrew ensures that no value is present for Crew, not even an explicit nil
func (o *MostPopularDataDetail) UnsetCrew() {
	o.Crew.Unset()
}

// GetImDbRating returns the ImDbRating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MostPopularDataDetail) GetImDbRating() string {
	if o == nil || o.ImDbRating.Get() == nil {
		var ret string
		return ret
	}
	return *o.ImDbRating.Get()
}

// GetImDbRatingOk returns a tuple with the ImDbRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MostPopularDataDetail) GetImDbRatingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImDbRating.Get(), o.ImDbRating.IsSet()
}

// HasImDbRating returns a boolean if a field has been set.
func (o *MostPopularDataDetail) HasImDbRating() bool {
	if o != nil && o.ImDbRating.IsSet() {
		return true
	}

	return false
}

// SetImDbRating gets a reference to the given NullableString and assigns it to the ImDbRating field.
func (o *MostPopularDataDetail) SetImDbRating(v string) {
	o.ImDbRating.Set(&v)
}
// SetImDbRatingNil sets the value for ImDbRating to be an explicit nil
func (o *MostPopularDataDetail) SetImDbRatingNil() {
	o.ImDbRating.Set(nil)
}

// UnsetImDbRating ensures that no value is present for ImDbRating, not even an explicit nil
func (o *MostPopularDataDetail) UnsetImDbRating() {
	o.ImDbRating.Unset()
}

// GetImDbRatingCount returns the ImDbRatingCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MostPopularDataDetail) GetImDbRatingCount() string {
	if o == nil || o.ImDbRatingCount.Get() == nil {
		var ret string
		return ret
	}
	return *o.ImDbRatingCount.Get()
}

// GetImDbRatingCountOk returns a tuple with the ImDbRatingCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MostPopularDataDetail) GetImDbRatingCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImDbRatingCount.Get(), o.ImDbRatingCount.IsSet()
}

// HasImDbRatingCount returns a boolean if a field has been set.
func (o *MostPopularDataDetail) HasImDbRatingCount() bool {
	if o != nil && o.ImDbRatingCount.IsSet() {
		return true
	}

	return false
}

// SetImDbRatingCount gets a reference to the given NullableString and assigns it to the ImDbRatingCount field.
func (o *MostPopularDataDetail) SetImDbRatingCount(v string) {
	o.ImDbRatingCount.Set(&v)
}
// SetImDbRatingCountNil sets the value for ImDbRatingCount to be an explicit nil
func (o *MostPopularDataDetail) SetImDbRatingCountNil() {
	o.ImDbRatingCount.Set(nil)
}

// UnsetImDbRatingCount ensures that no value is present for ImDbRatingCount, not even an explicit nil
func (o *MostPopularDataDetail) UnsetImDbRatingCount() {
	o.ImDbRatingCount.Unset()
}

func (o MostPopularDataDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Rank.IsSet() {
		toSerialize["rank"] = o.Rank.Get()
	}
	if o.RankUpDown.IsSet() {
		toSerialize["rankUpDown"] = o.RankUpDown.Get()
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.FullTitle.IsSet() {
		toSerialize["fullTitle"] = o.FullTitle.Get()
	}
	if o.Year.IsSet() {
		toSerialize["year"] = o.Year.Get()
	}
	if o.Image.IsSet() {
		toSerialize["image"] = o.Image.Get()
	}
	if o.Crew.IsSet() {
		toSerialize["crew"] = o.Crew.Get()
	}
	if o.ImDbRating.IsSet() {
		toSerialize["imDbRating"] = o.ImDbRating.Get()
	}
	if o.ImDbRatingCount.IsSet() {
		toSerialize["imDbRatingCount"] = o.ImDbRatingCount.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMostPopularDataDetail struct {
	value *MostPopularDataDetail
	isSet bool
}

func (v NullableMostPopularDataDetail) Get() *MostPopularDataDetail {
	return v.value
}

func (v *NullableMostPopularDataDetail) Set(val *MostPopularDataDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableMostPopularDataDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableMostPopularDataDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMostPopularDataDetail(val *MostPopularDataDetail) *NullableMostPopularDataDetail {
	return &NullableMostPopularDataDetail{value: val, isSet: true}
}

func (v NullableMostPopularDataDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMostPopularDataDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


