/*
IMDb-API

The IMDb-API Documentation. You need a <a href='/Identity/Account/Manage' target='_blank'><code>API Key</code></a> for testing APIs.<br/><a class='link' href='/API'>Back to API Tester</a>

API version: 1.8.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// NewMovieDataDetail struct for NewMovieDataDetail
type NewMovieDataDetail struct {
	Id NullableString `json:"id,omitempty"`
	Title NullableString `json:"title,omitempty"`
	FullTitle NullableString `json:"fullTitle,omitempty"`
	Year NullableString `json:"year,omitempty"`
	ReleaseState NullableString `json:"releaseState,omitempty"`
	Image NullableString `json:"image,omitempty"`
	RuntimeMins NullableString `json:"runtimeMins,omitempty"`
	RuntimeStr NullableString `json:"runtimeStr,omitempty"`
	Plot NullableString `json:"plot,omitempty"`
	ContentRating NullableString `json:"contentRating,omitempty"`
	ImDbRating NullableString `json:"imDbRating,omitempty"`
	ImDbRatingCount NullableString `json:"imDbRatingCount,omitempty"`
	MetacriticRating NullableString `json:"metacriticRating,omitempty"`
	Genres NullableString `json:"genres,omitempty"`
	GenreList []KeyValueItem `json:"genreList,omitempty"`
	Directors NullableString `json:"directors,omitempty"`
	DirectorList []StarShort `json:"directorList,omitempty"`
	Stars NullableString `json:"stars,omitempty"`
	StarList []StarShort `json:"starList,omitempty"`
}

// NewNewMovieDataDetail instantiates a new NewMovieDataDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNewMovieDataDetail() *NewMovieDataDetail {
	this := NewMovieDataDetail{}
	return &this
}

// NewNewMovieDataDetailWithDefaults instantiates a new NewMovieDataDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewMovieDataDetailWithDefaults() *NewMovieDataDetail {
	this := NewMovieDataDetail{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewMovieDataDetail) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewMovieDataDetail) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *NewMovieDataDetail) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *NewMovieDataDetail) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *NewMovieDataDetail) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *NewMovieDataDetail) UnsetId() {
	o.Id.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewMovieDataDetail) GetTitle() string {
	if o == nil || o.Title.Get() == nil {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewMovieDataDetail) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *NewMovieDataDetail) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *NewMovieDataDetail) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *NewMovieDataDetail) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *NewMovieDataDetail) UnsetTitle() {
	o.Title.Unset()
}

// GetFullTitle returns the FullTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewMovieDataDetail) GetFullTitle() string {
	if o == nil || o.FullTitle.Get() == nil {
		var ret string
		return ret
	}
	return *o.FullTitle.Get()
}

// GetFullTitleOk returns a tuple with the FullTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewMovieDataDetail) GetFullTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FullTitle.Get(), o.FullTitle.IsSet()
}

// HasFullTitle returns a boolean if a field has been set.
func (o *NewMovieDataDetail) HasFullTitle() bool {
	if o != nil && o.FullTitle.IsSet() {
		return true
	}

	return false
}

// SetFullTitle gets a reference to the given NullableString and assigns it to the FullTitle field.
func (o *NewMovieDataDetail) SetFullTitle(v string) {
	o.FullTitle.Set(&v)
}
// SetFullTitleNil sets the value for FullTitle to be an explicit nil
func (o *NewMovieDataDetail) SetFullTitleNil() {
	o.FullTitle.Set(nil)
}

// UnsetFullTitle ensures that no value is present for FullTitle, not even an explicit nil
func (o *NewMovieDataDetail) UnsetFullTitle() {
	o.FullTitle.Unset()
}

// GetYear returns the Year field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewMovieDataDetail) GetYear() string {
	if o == nil || o.Year.Get() == nil {
		var ret string
		return ret
	}
	return *o.Year.Get()
}

// GetYearOk returns a tuple with the Year field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewMovieDataDetail) GetYearOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Year.Get(), o.Year.IsSet()
}

// HasYear returns a boolean if a field has been set.
func (o *NewMovieDataDetail) HasYear() bool {
	if o != nil && o.Year.IsSet() {
		return true
	}

	return false
}

// SetYear gets a reference to the given NullableString and assigns it to the Year field.
func (o *NewMovieDataDetail) SetYear(v string) {
	o.Year.Set(&v)
}
// SetYearNil sets the value for Year to be an explicit nil
func (o *NewMovieDataDetail) SetYearNil() {
	o.Year.Set(nil)
}

// UnsetYear ensures that no value is present for Year, not even an explicit nil
func (o *NewMovieDataDetail) UnsetYear() {
	o.Year.Unset()
}

// GetReleaseState returns the ReleaseState field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewMovieDataDetail) GetReleaseState() string {
	if o == nil || o.ReleaseState.Get() == nil {
		var ret string
		return ret
	}
	return *o.ReleaseState.Get()
}

// GetReleaseStateOk returns a tuple with the ReleaseState field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewMovieDataDetail) GetReleaseStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReleaseState.Get(), o.ReleaseState.IsSet()
}

// HasReleaseState returns a boolean if a field has been set.
func (o *NewMovieDataDetail) HasReleaseState() bool {
	if o != nil && o.ReleaseState.IsSet() {
		return true
	}

	return false
}

// SetReleaseState gets a reference to the given NullableString and assigns it to the ReleaseState field.
func (o *NewMovieDataDetail) SetReleaseState(v string) {
	o.ReleaseState.Set(&v)
}
// SetReleaseStateNil sets the value for ReleaseState to be an explicit nil
func (o *NewMovieDataDetail) SetReleaseStateNil() {
	o.ReleaseState.Set(nil)
}

// UnsetReleaseState ensures that no value is present for ReleaseState, not even an explicit nil
func (o *NewMovieDataDetail) UnsetReleaseState() {
	o.ReleaseState.Unset()
}

// GetImage returns the Image field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewMovieDataDetail) GetImage() string {
	if o == nil || o.Image.Get() == nil {
		var ret string
		return ret
	}
	return *o.Image.Get()
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewMovieDataDetail) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Image.Get(), o.Image.IsSet()
}

// HasImage returns a boolean if a field has been set.
func (o *NewMovieDataDetail) HasImage() bool {
	if o != nil && o.Image.IsSet() {
		return true
	}

	return false
}

// SetImage gets a reference to the given NullableString and assigns it to the Image field.
func (o *NewMovieDataDetail) SetImage(v string) {
	o.Image.Set(&v)
}
// SetImageNil sets the value for Image to be an explicit nil
func (o *NewMovieDataDetail) SetImageNil() {
	o.Image.Set(nil)
}

// UnsetImage ensures that no value is present for Image, not even an explicit nil
func (o *NewMovieDataDetail) UnsetImage() {
	o.Image.Unset()
}

// GetRuntimeMins returns the RuntimeMins field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewMovieDataDetail) GetRuntimeMins() string {
	if o == nil || o.RuntimeMins.Get() == nil {
		var ret string
		return ret
	}
	return *o.RuntimeMins.Get()
}

// GetRuntimeMinsOk returns a tuple with the RuntimeMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewMovieDataDetail) GetRuntimeMinsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RuntimeMins.Get(), o.RuntimeMins.IsSet()
}

// HasRuntimeMins returns a boolean if a field has been set.
func (o *NewMovieDataDetail) HasRuntimeMins() bool {
	if o != nil && o.RuntimeMins.IsSet() {
		return true
	}

	return false
}

// SetRuntimeMins gets a reference to the given NullableString and assigns it to the RuntimeMins field.
func (o *NewMovieDataDetail) SetRuntimeMins(v string) {
	o.RuntimeMins.Set(&v)
}
// SetRuntimeMinsNil sets the value for RuntimeMins to be an explicit nil
func (o *NewMovieDataDetail) SetRuntimeMinsNil() {
	o.RuntimeMins.Set(nil)
}

// UnsetRuntimeMins ensures that no value is present for RuntimeMins, not even an explicit nil
func (o *NewMovieDataDetail) UnsetRuntimeMins() {
	o.RuntimeMins.Unset()
}

// GetRuntimeStr returns the RuntimeStr field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewMovieDataDetail) GetRuntimeStr() string {
	if o == nil || o.RuntimeStr.Get() == nil {
		var ret string
		return ret
	}
	return *o.RuntimeStr.Get()
}

// GetRuntimeStrOk returns a tuple with the RuntimeStr field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewMovieDataDetail) GetRuntimeStrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RuntimeStr.Get(), o.RuntimeStr.IsSet()
}

// HasRuntimeStr returns a boolean if a field has been set.
func (o *NewMovieDataDetail) HasRuntimeStr() bool {
	if o != nil && o.RuntimeStr.IsSet() {
		return true
	}

	return false
}

// SetRuntimeStr gets a reference to the given NullableString and assigns it to the RuntimeStr field.
func (o *NewMovieDataDetail) SetRuntimeStr(v string) {
	o.RuntimeStr.Set(&v)
}
// SetRuntimeStrNil sets the value for RuntimeStr to be an explicit nil
func (o *NewMovieDataDetail) SetRuntimeStrNil() {
	o.RuntimeStr.Set(nil)
}

// UnsetRuntimeStr ensures that no value is present for RuntimeStr, not even an explicit nil
func (o *NewMovieDataDetail) UnsetRuntimeStr() {
	o.RuntimeStr.Unset()
}

// GetPlot returns the Plot field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewMovieDataDetail) GetPlot() string {
	if o == nil || o.Plot.Get() == nil {
		var ret string
		return ret
	}
	return *o.Plot.Get()
}

// GetPlotOk returns a tuple with the Plot field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewMovieDataDetail) GetPlotOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Plot.Get(), o.Plot.IsSet()
}

// HasPlot returns a boolean if a field has been set.
func (o *NewMovieDataDetail) HasPlot() bool {
	if o != nil && o.Plot.IsSet() {
		return true
	}

	return false
}

// SetPlot gets a reference to the given NullableString and assigns it to the Plot field.
func (o *NewMovieDataDetail) SetPlot(v string) {
	o.Plot.Set(&v)
}
// SetPlotNil sets the value for Plot to be an explicit nil
func (o *NewMovieDataDetail) SetPlotNil() {
	o.Plot.Set(nil)
}

// UnsetPlot ensures that no value is present for Plot, not even an explicit nil
func (o *NewMovieDataDetail) UnsetPlot() {
	o.Plot.Unset()
}

// GetContentRating returns the ContentRating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewMovieDataDetail) GetContentRating() string {
	if o == nil || o.ContentRating.Get() == nil {
		var ret string
		return ret
	}
	return *o.ContentRating.Get()
}

// GetContentRatingOk returns a tuple with the ContentRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewMovieDataDetail) GetContentRatingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentRating.Get(), o.ContentRating.IsSet()
}

// HasContentRating returns a boolean if a field has been set.
func (o *NewMovieDataDetail) HasContentRating() bool {
	if o != nil && o.ContentRating.IsSet() {
		return true
	}

	return false
}

// SetContentRating gets a reference to the given NullableString and assigns it to the ContentRating field.
func (o *NewMovieDataDetail) SetContentRating(v string) {
	o.ContentRating.Set(&v)
}
// SetContentRatingNil sets the value for ContentRating to be an explicit nil
func (o *NewMovieDataDetail) SetContentRatingNil() {
	o.ContentRating.Set(nil)
}

// UnsetContentRating ensures that no value is present for ContentRating, not even an explicit nil
func (o *NewMovieDataDetail) UnsetContentRating() {
	o.ContentRating.Unset()
}

// GetImDbRating returns the ImDbRating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewMovieDataDetail) GetImDbRating() string {
	if o == nil || o.ImDbRating.Get() == nil {
		var ret string
		return ret
	}
	return *o.ImDbRating.Get()
}

// GetImDbRatingOk returns a tuple with the ImDbRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewMovieDataDetail) GetImDbRatingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImDbRating.Get(), o.ImDbRating.IsSet()
}

// HasImDbRating returns a boolean if a field has been set.
func (o *NewMovieDataDetail) HasImDbRating() bool {
	if o != nil && o.ImDbRating.IsSet() {
		return true
	}

	return false
}

// SetImDbRating gets a reference to the given NullableString and assigns it to the ImDbRating field.
func (o *NewMovieDataDetail) SetImDbRating(v string) {
	o.ImDbRating.Set(&v)
}
// SetImDbRatingNil sets the value for ImDbRating to be an explicit nil
func (o *NewMovieDataDetail) SetImDbRatingNil() {
	o.ImDbRating.Set(nil)
}

// UnsetImDbRating ensures that no value is present for ImDbRating, not even an explicit nil
func (o *NewMovieDataDetail) UnsetImDbRating() {
	o.ImDbRating.Unset()
}

// GetImDbRatingCount returns the ImDbRatingCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewMovieDataDetail) GetImDbRatingCount() string {
	if o == nil || o.ImDbRatingCount.Get() == nil {
		var ret string
		return ret
	}
	return *o.ImDbRatingCount.Get()
}

// GetImDbRatingCountOk returns a tuple with the ImDbRatingCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewMovieDataDetail) GetImDbRatingCountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImDbRatingCount.Get(), o.ImDbRatingCount.IsSet()
}

// HasImDbRatingCount returns a boolean if a field has been set.
func (o *NewMovieDataDetail) HasImDbRatingCount() bool {
	if o != nil && o.ImDbRatingCount.IsSet() {
		return true
	}

	return false
}

// SetImDbRatingCount gets a reference to the given NullableString and assigns it to the ImDbRatingCount field.
func (o *NewMovieDataDetail) SetImDbRatingCount(v string) {
	o.ImDbRatingCount.Set(&v)
}
// SetImDbRatingCountNil sets the value for ImDbRatingCount to be an explicit nil
func (o *NewMovieDataDetail) SetImDbRatingCountNil() {
	o.ImDbRatingCount.Set(nil)
}

// UnsetImDbRatingCount ensures that no value is present for ImDbRatingCount, not even an explicit nil
func (o *NewMovieDataDetail) UnsetImDbRatingCount() {
	o.ImDbRatingCount.Unset()
}

// GetMetacriticRating returns the MetacriticRating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewMovieDataDetail) GetMetacriticRating() string {
	if o == nil || o.MetacriticRating.Get() == nil {
		var ret string
		return ret
	}
	return *o.MetacriticRating.Get()
}

// GetMetacriticRatingOk returns a tuple with the MetacriticRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewMovieDataDetail) GetMetacriticRatingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetacriticRating.Get(), o.MetacriticRating.IsSet()
}

// HasMetacriticRating returns a boolean if a field has been set.
func (o *NewMovieDataDetail) HasMetacriticRating() bool {
	if o != nil && o.MetacriticRating.IsSet() {
		return true
	}

	return false
}

// SetMetacriticRating gets a reference to the given NullableString and assigns it to the MetacriticRating field.
func (o *NewMovieDataDetail) SetMetacriticRating(v string) {
	o.MetacriticRating.Set(&v)
}
// SetMetacriticRatingNil sets the value for MetacriticRating to be an explicit nil
func (o *NewMovieDataDetail) SetMetacriticRatingNil() {
	o.MetacriticRating.Set(nil)
}

// UnsetMetacriticRating ensures that no value is present for MetacriticRating, not even an explicit nil
func (o *NewMovieDataDetail) UnsetMetacriticRating() {
	o.MetacriticRating.Unset()
}

// GetGenres returns the Genres field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewMovieDataDetail) GetGenres() string {
	if o == nil || o.Genres.Get() == nil {
		var ret string
		return ret
	}
	return *o.Genres.Get()
}

// GetGenresOk returns a tuple with the Genres field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewMovieDataDetail) GetGenresOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Genres.Get(), o.Genres.IsSet()
}

// HasGenres returns a boolean if a field has been set.
func (o *NewMovieDataDetail) HasGenres() bool {
	if o != nil && o.Genres.IsSet() {
		return true
	}

	return false
}

// SetGenres gets a reference to the given NullableString and assigns it to the Genres field.
func (o *NewMovieDataDetail) SetGenres(v string) {
	o.Genres.Set(&v)
}
// SetGenresNil sets the value for Genres to be an explicit nil
func (o *NewMovieDataDetail) SetGenresNil() {
	o.Genres.Set(nil)
}

// UnsetGenres ensures that no value is present for Genres, not even an explicit nil
func (o *NewMovieDataDetail) UnsetGenres() {
	o.Genres.Unset()
}

// GetGenreList returns the GenreList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewMovieDataDetail) GetGenreList() []KeyValueItem {
	if o == nil {
		var ret []KeyValueItem
		return ret
	}
	return o.GenreList
}

// GetGenreListOk returns a tuple with the GenreList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewMovieDataDetail) GetGenreListOk() ([]KeyValueItem, bool) {
	if o == nil || o.GenreList == nil {
		return nil, false
	}
	return o.GenreList, true
}

// HasGenreList returns a boolean if a field has been set.
func (o *NewMovieDataDetail) HasGenreList() bool {
	if o != nil && o.GenreList != nil {
		return true
	}

	return false
}

// SetGenreList gets a reference to the given []KeyValueItem and assigns it to the GenreList field.
func (o *NewMovieDataDetail) SetGenreList(v []KeyValueItem) {
	o.GenreList = v
}

// GetDirectors returns the Directors field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewMovieDataDetail) GetDirectors() string {
	if o == nil || o.Directors.Get() == nil {
		var ret string
		return ret
	}
	return *o.Directors.Get()
}

// GetDirectorsOk returns a tuple with the Directors field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewMovieDataDetail) GetDirectorsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Directors.Get(), o.Directors.IsSet()
}

// HasDirectors returns a boolean if a field has been set.
func (o *NewMovieDataDetail) HasDirectors() bool {
	if o != nil && o.Directors.IsSet() {
		return true
	}

	return false
}

// SetDirectors gets a reference to the given NullableString and assigns it to the Directors field.
func (o *NewMovieDataDetail) SetDirectors(v string) {
	o.Directors.Set(&v)
}
// SetDirectorsNil sets the value for Directors to be an explicit nil
func (o *NewMovieDataDetail) SetDirectorsNil() {
	o.Directors.Set(nil)
}

// UnsetDirectors ensures that no value is present for Directors, not even an explicit nil
func (o *NewMovieDataDetail) UnsetDirectors() {
	o.Directors.Unset()
}

// GetDirectorList returns the DirectorList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewMovieDataDetail) GetDirectorList() []StarShort {
	if o == nil {
		var ret []StarShort
		return ret
	}
	return o.DirectorList
}

// GetDirectorListOk returns a tuple with the DirectorList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewMovieDataDetail) GetDirectorListOk() ([]StarShort, bool) {
	if o == nil || o.DirectorList == nil {
		return nil, false
	}
	return o.DirectorList, true
}

// HasDirectorList returns a boolean if a field has been set.
func (o *NewMovieDataDetail) HasDirectorList() bool {
	if o != nil && o.DirectorList != nil {
		return true
	}

	return false
}

// SetDirectorList gets a reference to the given []StarShort and assigns it to the DirectorList field.
func (o *NewMovieDataDetail) SetDirectorList(v []StarShort) {
	o.DirectorList = v
}

// GetStars returns the Stars field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewMovieDataDetail) GetStars() string {
	if o == nil || o.Stars.Get() == nil {
		var ret string
		return ret
	}
	return *o.Stars.Get()
}

// GetStarsOk returns a tuple with the Stars field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewMovieDataDetail) GetStarsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Stars.Get(), o.Stars.IsSet()
}

// HasStars returns a boolean if a field has been set.
func (o *NewMovieDataDetail) HasStars() bool {
	if o != nil && o.Stars.IsSet() {
		return true
	}

	return false
}

// SetStars gets a reference to the given NullableString and assigns it to the Stars field.
func (o *NewMovieDataDetail) SetStars(v string) {
	o.Stars.Set(&v)
}
// SetStarsNil sets the value for Stars to be an explicit nil
func (o *NewMovieDataDetail) SetStarsNil() {
	o.Stars.Set(nil)
}

// UnsetStars ensures that no value is present for Stars, not even an explicit nil
func (o *NewMovieDataDetail) UnsetStars() {
	o.Stars.Unset()
}

// GetStarList returns the StarList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NewMovieDataDetail) GetStarList() []StarShort {
	if o == nil {
		var ret []StarShort
		return ret
	}
	return o.StarList
}

// GetStarListOk returns a tuple with the StarList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NewMovieDataDetail) GetStarListOk() ([]StarShort, bool) {
	if o == nil || o.StarList == nil {
		return nil, false
	}
	return o.StarList, true
}

// HasStarList returns a boolean if a field has been set.
func (o *NewMovieDataDetail) HasStarList() bool {
	if o != nil && o.StarList != nil {
		return true
	}

	return false
}

// SetStarList gets a reference to the given []StarShort and assigns it to the StarList field.
func (o *NewMovieDataDetail) SetStarList(v []StarShort) {
	o.StarList = v
}

func (o NewMovieDataDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.FullTitle.IsSet() {
		toSerialize["fullTitle"] = o.FullTitle.Get()
	}
	if o.Year.IsSet() {
		toSerialize["year"] = o.Year.Get()
	}
	if o.ReleaseState.IsSet() {
		toSerialize["releaseState"] = o.ReleaseState.Get()
	}
	if o.Image.IsSet() {
		toSerialize["image"] = o.Image.Get()
	}
	if o.RuntimeMins.IsSet() {
		toSerialize["runtimeMins"] = o.RuntimeMins.Get()
	}
	if o.RuntimeStr.IsSet() {
		toSerialize["runtimeStr"] = o.RuntimeStr.Get()
	}
	if o.Plot.IsSet() {
		toSerialize["plot"] = o.Plot.Get()
	}
	if o.ContentRating.IsSet() {
		toSerialize["contentRating"] = o.ContentRating.Get()
	}
	if o.ImDbRating.IsSet() {
		toSerialize["imDbRating"] = o.ImDbRating.Get()
	}
	if o.ImDbRatingCount.IsSet() {
		toSerialize["imDbRatingCount"] = o.ImDbRatingCount.Get()
	}
	if o.MetacriticRating.IsSet() {
		toSerialize["metacriticRating"] = o.MetacriticRating.Get()
	}
	if o.Genres.IsSet() {
		toSerialize["genres"] = o.Genres.Get()
	}
	if o.GenreList != nil {
		toSerialize["genreList"] = o.GenreList
	}
	if o.Directors.IsSet() {
		toSerialize["directors"] = o.Directors.Get()
	}
	if o.DirectorList != nil {
		toSerialize["directorList"] = o.DirectorList
	}
	if o.Stars.IsSet() {
		toSerialize["stars"] = o.Stars.Get()
	}
	if o.StarList != nil {
		toSerialize["starList"] = o.StarList
	}
	return json.Marshal(toSerialize)
}

type NullableNewMovieDataDetail struct {
	value *NewMovieDataDetail
	isSet bool
}

func (v NullableNewMovieDataDetail) Get() *NewMovieDataDetail {
	return v.value
}

func (v *NullableNewMovieDataDetail) Set(val *NewMovieDataDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableNewMovieDataDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableNewMovieDataDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNewMovieDataDetail(val *NewMovieDataDetail) *NullableNewMovieDataDetail {
	return &NullableNewMovieDataDetail{value: val, isSet: true}
}

func (v NullableNewMovieDataDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNewMovieDataDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


