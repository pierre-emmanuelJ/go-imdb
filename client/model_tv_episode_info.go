/*
IMDb-API

The IMDb-API Documentation. You need a <a href='/Identity/Account/Manage' target='_blank'><code>API Key</code></a> for testing APIs.<br/><a class='link' href='/API'>Back to API Tester</a>

API version: 1.8.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// TvEpisodeInfo struct for TvEpisodeInfo
type TvEpisodeInfo struct {
	SeriesId NullableString `json:"seriesId,omitempty"`
	SeriesTitle NullableString `json:"seriesTitle,omitempty"`
	SeriesFullTitle NullableString `json:"seriesFullTitle,omitempty"`
	SeriesYear NullableString `json:"seriesYear,omitempty"`
	SeriesYearEnd NullableString `json:"seriesYearEnd,omitempty"`
	SeasonNumber NullableString `json:"seasonNumber,omitempty"`
	EpisodeNumber NullableString `json:"episodeNumber,omitempty"`
	PreviousEpisodeId NullableString `json:"previousEpisodeId,omitempty"`
	NextEpisodeId NullableString `json:"nextEpisodeId,omitempty"`
}

// NewTvEpisodeInfo instantiates a new TvEpisodeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTvEpisodeInfo() *TvEpisodeInfo {
	this := TvEpisodeInfo{}
	return &this
}

// NewTvEpisodeInfoWithDefaults instantiates a new TvEpisodeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTvEpisodeInfoWithDefaults() *TvEpisodeInfo {
	this := TvEpisodeInfo{}
	return &this
}

// GetSeriesId returns the SeriesId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TvEpisodeInfo) GetSeriesId() string {
	if o == nil || o.SeriesId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SeriesId.Get()
}

// GetSeriesIdOk returns a tuple with the SeriesId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TvEpisodeInfo) GetSeriesIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeriesId.Get(), o.SeriesId.IsSet()
}

// HasSeriesId returns a boolean if a field has been set.
func (o *TvEpisodeInfo) HasSeriesId() bool {
	if o != nil && o.SeriesId.IsSet() {
		return true
	}

	return false
}

// SetSeriesId gets a reference to the given NullableString and assigns it to the SeriesId field.
func (o *TvEpisodeInfo) SetSeriesId(v string) {
	o.SeriesId.Set(&v)
}
// SetSeriesIdNil sets the value for SeriesId to be an explicit nil
func (o *TvEpisodeInfo) SetSeriesIdNil() {
	o.SeriesId.Set(nil)
}

// UnsetSeriesId ensures that no value is present for SeriesId, not even an explicit nil
func (o *TvEpisodeInfo) UnsetSeriesId() {
	o.SeriesId.Unset()
}

// GetSeriesTitle returns the SeriesTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TvEpisodeInfo) GetSeriesTitle() string {
	if o == nil || o.SeriesTitle.Get() == nil {
		var ret string
		return ret
	}
	return *o.SeriesTitle.Get()
}

// GetSeriesTitleOk returns a tuple with the SeriesTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TvEpisodeInfo) GetSeriesTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeriesTitle.Get(), o.SeriesTitle.IsSet()
}

// HasSeriesTitle returns a boolean if a field has been set.
func (o *TvEpisodeInfo) HasSeriesTitle() bool {
	if o != nil && o.SeriesTitle.IsSet() {
		return true
	}

	return false
}

// SetSeriesTitle gets a reference to the given NullableString and assigns it to the SeriesTitle field.
func (o *TvEpisodeInfo) SetSeriesTitle(v string) {
	o.SeriesTitle.Set(&v)
}
// SetSeriesTitleNil sets the value for SeriesTitle to be an explicit nil
func (o *TvEpisodeInfo) SetSeriesTitleNil() {
	o.SeriesTitle.Set(nil)
}

// UnsetSeriesTitle ensures that no value is present for SeriesTitle, not even an explicit nil
func (o *TvEpisodeInfo) UnsetSeriesTitle() {
	o.SeriesTitle.Unset()
}

// GetSeriesFullTitle returns the SeriesFullTitle field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TvEpisodeInfo) GetSeriesFullTitle() string {
	if o == nil || o.SeriesFullTitle.Get() == nil {
		var ret string
		return ret
	}
	return *o.SeriesFullTitle.Get()
}

// GetSeriesFullTitleOk returns a tuple with the SeriesFullTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TvEpisodeInfo) GetSeriesFullTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeriesFullTitle.Get(), o.SeriesFullTitle.IsSet()
}

// HasSeriesFullTitle returns a boolean if a field has been set.
func (o *TvEpisodeInfo) HasSeriesFullTitle() bool {
	if o != nil && o.SeriesFullTitle.IsSet() {
		return true
	}

	return false
}

// SetSeriesFullTitle gets a reference to the given NullableString and assigns it to the SeriesFullTitle field.
func (o *TvEpisodeInfo) SetSeriesFullTitle(v string) {
	o.SeriesFullTitle.Set(&v)
}
// SetSeriesFullTitleNil sets the value for SeriesFullTitle to be an explicit nil
func (o *TvEpisodeInfo) SetSeriesFullTitleNil() {
	o.SeriesFullTitle.Set(nil)
}

// UnsetSeriesFullTitle ensures that no value is present for SeriesFullTitle, not even an explicit nil
func (o *TvEpisodeInfo) UnsetSeriesFullTitle() {
	o.SeriesFullTitle.Unset()
}

// GetSeriesYear returns the SeriesYear field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TvEpisodeInfo) GetSeriesYear() string {
	if o == nil || o.SeriesYear.Get() == nil {
		var ret string
		return ret
	}
	return *o.SeriesYear.Get()
}

// GetSeriesYearOk returns a tuple with the SeriesYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TvEpisodeInfo) GetSeriesYearOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeriesYear.Get(), o.SeriesYear.IsSet()
}

// HasSeriesYear returns a boolean if a field has been set.
func (o *TvEpisodeInfo) HasSeriesYear() bool {
	if o != nil && o.SeriesYear.IsSet() {
		return true
	}

	return false
}

// SetSeriesYear gets a reference to the given NullableString and assigns it to the SeriesYear field.
func (o *TvEpisodeInfo) SetSeriesYear(v string) {
	o.SeriesYear.Set(&v)
}
// SetSeriesYearNil sets the value for SeriesYear to be an explicit nil
func (o *TvEpisodeInfo) SetSeriesYearNil() {
	o.SeriesYear.Set(nil)
}

// UnsetSeriesYear ensures that no value is present for SeriesYear, not even an explicit nil
func (o *TvEpisodeInfo) UnsetSeriesYear() {
	o.SeriesYear.Unset()
}

// GetSeriesYearEnd returns the SeriesYearEnd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TvEpisodeInfo) GetSeriesYearEnd() string {
	if o == nil || o.SeriesYearEnd.Get() == nil {
		var ret string
		return ret
	}
	return *o.SeriesYearEnd.Get()
}

// GetSeriesYearEndOk returns a tuple with the SeriesYearEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TvEpisodeInfo) GetSeriesYearEndOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeriesYearEnd.Get(), o.SeriesYearEnd.IsSet()
}

// HasSeriesYearEnd returns a boolean if a field has been set.
func (o *TvEpisodeInfo) HasSeriesYearEnd() bool {
	if o != nil && o.SeriesYearEnd.IsSet() {
		return true
	}

	return false
}

// SetSeriesYearEnd gets a reference to the given NullableString and assigns it to the SeriesYearEnd field.
func (o *TvEpisodeInfo) SetSeriesYearEnd(v string) {
	o.SeriesYearEnd.Set(&v)
}
// SetSeriesYearEndNil sets the value for SeriesYearEnd to be an explicit nil
func (o *TvEpisodeInfo) SetSeriesYearEndNil() {
	o.SeriesYearEnd.Set(nil)
}

// UnsetSeriesYearEnd ensures that no value is present for SeriesYearEnd, not even an explicit nil
func (o *TvEpisodeInfo) UnsetSeriesYearEnd() {
	o.SeriesYearEnd.Unset()
}

// GetSeasonNumber returns the SeasonNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TvEpisodeInfo) GetSeasonNumber() string {
	if o == nil || o.SeasonNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.SeasonNumber.Get()
}

// GetSeasonNumberOk returns a tuple with the SeasonNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TvEpisodeInfo) GetSeasonNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SeasonNumber.Get(), o.SeasonNumber.IsSet()
}

// HasSeasonNumber returns a boolean if a field has been set.
func (o *TvEpisodeInfo) HasSeasonNumber() bool {
	if o != nil && o.SeasonNumber.IsSet() {
		return true
	}

	return false
}

// SetSeasonNumber gets a reference to the given NullableString and assigns it to the SeasonNumber field.
func (o *TvEpisodeInfo) SetSeasonNumber(v string) {
	o.SeasonNumber.Set(&v)
}
// SetSeasonNumberNil sets the value for SeasonNumber to be an explicit nil
func (o *TvEpisodeInfo) SetSeasonNumberNil() {
	o.SeasonNumber.Set(nil)
}

// UnsetSeasonNumber ensures that no value is present for SeasonNumber, not even an explicit nil
func (o *TvEpisodeInfo) UnsetSeasonNumber() {
	o.SeasonNumber.Unset()
}

// GetEpisodeNumber returns the EpisodeNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TvEpisodeInfo) GetEpisodeNumber() string {
	if o == nil || o.EpisodeNumber.Get() == nil {
		var ret string
		return ret
	}
	return *o.EpisodeNumber.Get()
}

// GetEpisodeNumberOk returns a tuple with the EpisodeNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TvEpisodeInfo) GetEpisodeNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EpisodeNumber.Get(), o.EpisodeNumber.IsSet()
}

// HasEpisodeNumber returns a boolean if a field has been set.
func (o *TvEpisodeInfo) HasEpisodeNumber() bool {
	if o != nil && o.EpisodeNumber.IsSet() {
		return true
	}

	return false
}

// SetEpisodeNumber gets a reference to the given NullableString and assigns it to the EpisodeNumber field.
func (o *TvEpisodeInfo) SetEpisodeNumber(v string) {
	o.EpisodeNumber.Set(&v)
}
// SetEpisodeNumberNil sets the value for EpisodeNumber to be an explicit nil
func (o *TvEpisodeInfo) SetEpisodeNumberNil() {
	o.EpisodeNumber.Set(nil)
}

// UnsetEpisodeNumber ensures that no value is present for EpisodeNumber, not even an explicit nil
func (o *TvEpisodeInfo) UnsetEpisodeNumber() {
	o.EpisodeNumber.Unset()
}

// GetPreviousEpisodeId returns the PreviousEpisodeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TvEpisodeInfo) GetPreviousEpisodeId() string {
	if o == nil || o.PreviousEpisodeId.Get() == nil {
		var ret string
		return ret
	}
	return *o.PreviousEpisodeId.Get()
}

// GetPreviousEpisodeIdOk returns a tuple with the PreviousEpisodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TvEpisodeInfo) GetPreviousEpisodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PreviousEpisodeId.Get(), o.PreviousEpisodeId.IsSet()
}

// HasPreviousEpisodeId returns a boolean if a field has been set.
func (o *TvEpisodeInfo) HasPreviousEpisodeId() bool {
	if o != nil && o.PreviousEpisodeId.IsSet() {
		return true
	}

	return false
}

// SetPreviousEpisodeId gets a reference to the given NullableString and assigns it to the PreviousEpisodeId field.
func (o *TvEpisodeInfo) SetPreviousEpisodeId(v string) {
	o.PreviousEpisodeId.Set(&v)
}
// SetPreviousEpisodeIdNil sets the value for PreviousEpisodeId to be an explicit nil
func (o *TvEpisodeInfo) SetPreviousEpisodeIdNil() {
	o.PreviousEpisodeId.Set(nil)
}

// UnsetPreviousEpisodeId ensures that no value is present for PreviousEpisodeId, not even an explicit nil
func (o *TvEpisodeInfo) UnsetPreviousEpisodeId() {
	o.PreviousEpisodeId.Unset()
}

// GetNextEpisodeId returns the NextEpisodeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TvEpisodeInfo) GetNextEpisodeId() string {
	if o == nil || o.NextEpisodeId.Get() == nil {
		var ret string
		return ret
	}
	return *o.NextEpisodeId.Get()
}

// GetNextEpisodeIdOk returns a tuple with the NextEpisodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TvEpisodeInfo) GetNextEpisodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextEpisodeId.Get(), o.NextEpisodeId.IsSet()
}

// HasNextEpisodeId returns a boolean if a field has been set.
func (o *TvEpisodeInfo) HasNextEpisodeId() bool {
	if o != nil && o.NextEpisodeId.IsSet() {
		return true
	}

	return false
}

// SetNextEpisodeId gets a reference to the given NullableString and assigns it to the NextEpisodeId field.
func (o *TvEpisodeInfo) SetNextEpisodeId(v string) {
	o.NextEpisodeId.Set(&v)
}
// SetNextEpisodeIdNil sets the value for NextEpisodeId to be an explicit nil
func (o *TvEpisodeInfo) SetNextEpisodeIdNil() {
	o.NextEpisodeId.Set(nil)
}

// UnsetNextEpisodeId ensures that no value is present for NextEpisodeId, not even an explicit nil
func (o *TvEpisodeInfo) UnsetNextEpisodeId() {
	o.NextEpisodeId.Unset()
}

func (o TvEpisodeInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SeriesId.IsSet() {
		toSerialize["seriesId"] = o.SeriesId.Get()
	}
	if o.SeriesTitle.IsSet() {
		toSerialize["seriesTitle"] = o.SeriesTitle.Get()
	}
	if o.SeriesFullTitle.IsSet() {
		toSerialize["seriesFullTitle"] = o.SeriesFullTitle.Get()
	}
	if o.SeriesYear.IsSet() {
		toSerialize["seriesYear"] = o.SeriesYear.Get()
	}
	if o.SeriesYearEnd.IsSet() {
		toSerialize["seriesYearEnd"] = o.SeriesYearEnd.Get()
	}
	if o.SeasonNumber.IsSet() {
		toSerialize["seasonNumber"] = o.SeasonNumber.Get()
	}
	if o.EpisodeNumber.IsSet() {
		toSerialize["episodeNumber"] = o.EpisodeNumber.Get()
	}
	if o.PreviousEpisodeId.IsSet() {
		toSerialize["previousEpisodeId"] = o.PreviousEpisodeId.Get()
	}
	if o.NextEpisodeId.IsSet() {
		toSerialize["nextEpisodeId"] = o.NextEpisodeId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTvEpisodeInfo struct {
	value *TvEpisodeInfo
	isSet bool
}

func (v NullableTvEpisodeInfo) Get() *TvEpisodeInfo {
	return v.value
}

func (v *NullableTvEpisodeInfo) Set(val *TvEpisodeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTvEpisodeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTvEpisodeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTvEpisodeInfo(val *TvEpisodeInfo) *NullableTvEpisodeInfo {
	return &NullableTvEpisodeInfo{value: val, isSet: true}
}

func (v NullableTvEpisodeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTvEpisodeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


