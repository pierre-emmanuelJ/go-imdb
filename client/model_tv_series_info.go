/*
IMDb-API

The IMDb-API Documentation. You need a <a href='/Identity/Account/Manage' target='_blank'><code>API Key</code></a> for testing APIs.<br/><a class='link' href='/API'>Back to API Tester</a>

API version: 1.8.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// TvSeriesInfo struct for TvSeriesInfo
type TvSeriesInfo struct {
	YearEnd NullableString `json:"yearEnd,omitempty"`
	Creators NullableString `json:"creators,omitempty"`
	CreatorList []StarShort `json:"creatorList,omitempty"`
	Seasons []string `json:"seasons,omitempty"`
}

// NewTvSeriesInfo instantiates a new TvSeriesInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTvSeriesInfo() *TvSeriesInfo {
	this := TvSeriesInfo{}
	return &this
}

// NewTvSeriesInfoWithDefaults instantiates a new TvSeriesInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTvSeriesInfoWithDefaults() *TvSeriesInfo {
	this := TvSeriesInfo{}
	return &this
}

// GetYearEnd returns the YearEnd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TvSeriesInfo) GetYearEnd() string {
	if o == nil || o.YearEnd.Get() == nil {
		var ret string
		return ret
	}
	return *o.YearEnd.Get()
}

// GetYearEndOk returns a tuple with the YearEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TvSeriesInfo) GetYearEndOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.YearEnd.Get(), o.YearEnd.IsSet()
}

// HasYearEnd returns a boolean if a field has been set.
func (o *TvSeriesInfo) HasYearEnd() bool {
	if o != nil && o.YearEnd.IsSet() {
		return true
	}

	return false
}

// SetYearEnd gets a reference to the given NullableString and assigns it to the YearEnd field.
func (o *TvSeriesInfo) SetYearEnd(v string) {
	o.YearEnd.Set(&v)
}
// SetYearEndNil sets the value for YearEnd to be an explicit nil
func (o *TvSeriesInfo) SetYearEndNil() {
	o.YearEnd.Set(nil)
}

// UnsetYearEnd ensures that no value is present for YearEnd, not even an explicit nil
func (o *TvSeriesInfo) UnsetYearEnd() {
	o.YearEnd.Unset()
}

// GetCreators returns the Creators field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TvSeriesInfo) GetCreators() string {
	if o == nil || o.Creators.Get() == nil {
		var ret string
		return ret
	}
	return *o.Creators.Get()
}

// GetCreatorsOk returns a tuple with the Creators field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TvSeriesInfo) GetCreatorsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Creators.Get(), o.Creators.IsSet()
}

// HasCreators returns a boolean if a field has been set.
func (o *TvSeriesInfo) HasCreators() bool {
	if o != nil && o.Creators.IsSet() {
		return true
	}

	return false
}

// SetCreators gets a reference to the given NullableString and assigns it to the Creators field.
func (o *TvSeriesInfo) SetCreators(v string) {
	o.Creators.Set(&v)
}
// SetCreatorsNil sets the value for Creators to be an explicit nil
func (o *TvSeriesInfo) SetCreatorsNil() {
	o.Creators.Set(nil)
}

// UnsetCreators ensures that no value is present for Creators, not even an explicit nil
func (o *TvSeriesInfo) UnsetCreators() {
	o.Creators.Unset()
}

// GetCreatorList returns the CreatorList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TvSeriesInfo) GetCreatorList() []StarShort {
	if o == nil {
		var ret []StarShort
		return ret
	}
	return o.CreatorList
}

// GetCreatorListOk returns a tuple with the CreatorList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TvSeriesInfo) GetCreatorListOk() ([]StarShort, bool) {
	if o == nil || o.CreatorList == nil {
		return nil, false
	}
	return o.CreatorList, true
}

// HasCreatorList returns a boolean if a field has been set.
func (o *TvSeriesInfo) HasCreatorList() bool {
	if o != nil && o.CreatorList != nil {
		return true
	}

	return false
}

// SetCreatorList gets a reference to the given []StarShort and assigns it to the CreatorList field.
func (o *TvSeriesInfo) SetCreatorList(v []StarShort) {
	o.CreatorList = v
}

// GetSeasons returns the Seasons field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TvSeriesInfo) GetSeasons() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Seasons
}

// GetSeasonsOk returns a tuple with the Seasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TvSeriesInfo) GetSeasonsOk() ([]string, bool) {
	if o == nil || o.Seasons == nil {
		return nil, false
	}
	return o.Seasons, true
}

// HasSeasons returns a boolean if a field has been set.
func (o *TvSeriesInfo) HasSeasons() bool {
	if o != nil && o.Seasons != nil {
		return true
	}

	return false
}

// SetSeasons gets a reference to the given []string and assigns it to the Seasons field.
func (o *TvSeriesInfo) SetSeasons(v []string) {
	o.Seasons = v
}

func (o TvSeriesInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.YearEnd.IsSet() {
		toSerialize["yearEnd"] = o.YearEnd.Get()
	}
	if o.Creators.IsSet() {
		toSerialize["creators"] = o.Creators.Get()
	}
	if o.CreatorList != nil {
		toSerialize["creatorList"] = o.CreatorList
	}
	if o.Seasons != nil {
		toSerialize["seasons"] = o.Seasons
	}
	return json.Marshal(toSerialize)
}

type NullableTvSeriesInfo struct {
	value *TvSeriesInfo
	isSet bool
}

func (v NullableTvSeriesInfo) Get() *TvSeriesInfo {
	return v.value
}

func (v *NullableTvSeriesInfo) Set(val *TvSeriesInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTvSeriesInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTvSeriesInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTvSeriesInfo(val *TvSeriesInfo) *NullableTvSeriesInfo {
	return &NullableTvSeriesInfo{value: val, isSet: true}
}

func (v NullableTvSeriesInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTvSeriesInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


